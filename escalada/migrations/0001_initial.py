# Generated by Django 4.0.3 on 2022-06-29 22:38

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('isInstructor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('lessonsPerWeek', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(1)])),
                ('maxClimbers', models.IntegerField(default=1)),
                ('onlyStaffEditable', models.BooleanField(default=True)),
                ('durationInHours', models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='ClimbClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonDay', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=13)),
                ('begin_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField()),
                ('is_Available', models.BooleanField(default=True)),
                ('classType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_type', to='escalada.classtype')),
            ],
        ),
        migrations.CreateModel(
            name='ClimbPassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('maxClimbers', models.IntegerField(default=1)),
                ('onlyStaffEditable', models.BooleanField(default=True)),
                ('durationInHours', models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberOfWeeks', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('classType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='escalada.classtype')),
                ('climbPassType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='escalada.climbpasstype')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='WeekdaySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0)),
                ('opening_hour', models.TimeField(default=datetime.time(0, 0))),
                ('closing_hour', models.TimeField(default=datetime.time(23, 59))),
            ],
        ),
        migrations.CreateModel(
            name='MyCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticketsAvailable', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('recentlyBought', models.BooleanField(default=True)),
                ('climber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escalada.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_date', models.DateField(default=datetime.date.today)),
                ('climbClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escalada.climbclass')),
                ('climbers', models.ManyToManyField(related_name='students', to=settings.AUTH_USER_MODEL)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escalada.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('concept', models.CharField(max_length=500)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('climber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreeClimb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('begin_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(default=datetime.time(2, 0))),
                ('climbPassType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escalada.climbpasstype')),
                ('climber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freeClimber', to=settings.AUTH_USER_MODEL)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escalada.coupon')),
            ],
        ),
        migrations.AddConstraint(
            model_name='mycoupon',
            constraint=models.UniqueConstraint(fields=('climber', 'coupon'), name='escalada_mycoupon_unique_relationships'),
        ),
    ]
